<Type Name="Project" FullName="Microsoft.Build.BuildEngine.Project">
  <TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.BuildEngine.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Engine</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1">
      <AttributeName Language="C#">[System.Obsolete("This class has been deprecated. Please use Microsoft.Build.Evaluation.Project from the Microsoft.Build assembly instead.")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Obsolete("This class has been deprecated. Please use Microsoft.Build.Evaluation.Project from the Microsoft.Build assembly instead.")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
             This class represents an MSBuild project.  It is a container for items,
             properties, and targets.  It can load in project content from in-memory
             XML or from an XML file, and it can save to an XML file, preserving
             most whitespace and all XML comments.
            
             All Project objects must be associated with an Engine object, in order
             to get at the loggers and other shared information.  Also, when doing
             a "build", the Engine needs to keep track of which projects are currently
             building.
             </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A <xref:Microsoft.Build.BuildEngine.Project> represents an MSBuild project. It is a container for items, properties and targets. It can load project content from in-memory XML or from an XML file, and can save to an XML file, preserving most white space and all XML comments.  
  
 Every <xref:Microsoft.Build.BuildEngine.Project> must be associated with an <xref:Microsoft.Build.BuildEngine.Engine> to access shared information. During a build, the <xref:Microsoft.Build.BuildEngine.Engine> object keeps track of which projects are currently building.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.BuildEngine.Project" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty><xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItemGroup/GetEnumerator/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_ListItemsAndProperties/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
            This default constructor creates a new Project object associated with
            the global Engine object.
            </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty><xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItemGroup/GetEnumerator/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_ListItemsAndProperties/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.BuildEngine.Engine engine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.BuildEngine.Engine engine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As Engine)" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.BuildEngine.Project : Microsoft.Build.BuildEngine.Engine -&gt; Microsoft.Build.BuildEngine.Project" Usage="new Microsoft.Build.BuildEngine.Project engine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::BuildEngine::Engine ^ engine);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="engine" Type="Microsoft.Build.BuildEngine.Engine" />
      </Parameters>
      <Docs>
        <param name="engine">Engine that will build this project.</param>
        <summary>
            Creates an instance of this class for the given engine.
            </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItem/Overview/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_AddNewItem/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.BuildEngine.Engine engine, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.BuildEngine.Engine engine, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.#ctor(Microsoft.Build.BuildEngine.Engine,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (engine As Engine, toolsVersion As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.BuildEngine.Project : Microsoft.Build.BuildEngine.Engine * string -&gt; Microsoft.Build.BuildEngine.Project" Usage="new Microsoft.Build.BuildEngine.Project (engine, toolsVersion)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::BuildEngine::Engine ^ engine, System::String ^ toolsVersion);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="engine" Type="Microsoft.Build.BuildEngine.Engine" Index="0" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
        <Parameter Name="toolsVersion" Type="System.String" Index="1" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
      </Parameters>
      <Docs>
        <param name="engine">Engine that will build this project. May be null if the global engine is expected.</param>
        <param name="toolsVersion">Tools version to use during builds of this project instance. May be null,
            in which case we will use the value in the Project's ToolsVersion attribute, or else the engine
            default value.</param>
        <summary>
            Creates an instance of this class for the given engine, specifying a tools version to
            use during builds of this project.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="AddNewImport">
      <MemberSignature Language="C#" Value="public void AddNewImport (string projectFile, string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNewImport(string projectFile, string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.AddNewImport(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNewImport (projectFile As String, condition As String)" />
      <MemberSignature Language="F#" Value="member this.AddNewImport : string * string -&gt; unit" Usage="project.AddNewImport (projectFile, condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNewImport(System::String ^ projectFile, System::String ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile" />
        <param name="condition" />
        <summary>
            Adds a new &lt;Import&gt; element to the end of the project.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddNewItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Adds the specified  element to the project.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItem AddNewItem (string itemName, string itemInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildItem AddNewItem(string itemName, string itemInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItem (itemName As String, itemInclude As String) As BuildItem" />
      <MemberSignature Language="F#" Value="member this.AddNewItem : string * string -&gt; Microsoft.Build.BuildEngine.BuildItem" Usage="project.AddNewItem (itemName, itemInclude)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::BuildEngine::BuildItem ^ AddNewItem(System::String ^ itemName, System::String ^ itemInclude);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
        <Parameter Name="itemInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemName">The name of the item list this item belongs to.</param>
        <param name="itemInclude">The value of the item's <c>Include</c> attribute i.e. the item-spec</param>
        <summary>
            Called from the IDE to add a new item of a particular type to the project file. This method tries to add the new item
            near the other items of the same type.
            </summary>
        <returns>The new item after evaluation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method attempts to add the item to the project near the other items in the item collection.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="AddNewItem">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItem AddNewItem (string itemName, string itemInclude, bool treatItemIncludeAsLiteral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildItem AddNewItem(string itemName, string itemInclude, bool treatItemIncludeAsLiteral) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.AddNewItem(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItem (itemName As String, itemInclude As String, treatItemIncludeAsLiteral As Boolean) As BuildItem" />
      <MemberSignature Language="F#" Value="member this.AddNewItem : string * string * bool -&gt; Microsoft.Build.BuildEngine.BuildItem" Usage="project.AddNewItem (itemName, itemInclude, treatItemIncludeAsLiteral)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::BuildEngine::BuildItem ^ AddNewItem(System::String ^ itemName, System::String ^ itemInclude, bool treatItemIncludeAsLiteral);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
        <Parameter Name="itemInclude" Type="System.String" />
        <Parameter Name="treatItemIncludeAsLiteral" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="itemName" />
        <param name="itemInclude" />
        <param name="treatItemIncludeAsLiteral" />
        <summary>
            Adds a new item to the project, and optionally escapes the Include value so it's treated as a literal value.
            </summary>
        <returns />
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method attempts to add the item to the project near the other items in the item collection.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="AddNewItemGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItemGroup AddNewItemGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildItemGroup AddNewItemGroup() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.AddNewItemGroup" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewItemGroup () As BuildItemGroup" />
      <MemberSignature Language="F#" Value="member this.AddNewItemGroup : unit -&gt; Microsoft.Build.BuildEngine.BuildItemGroup" Usage="project.AddNewItemGroup " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::BuildEngine::BuildItemGroup ^ AddNewItemGroup();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItemGroup</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Adds a new &lt;ItemGroup&gt; element to the project, and returns the
            corresponding BuildItemGroup object which can then be populated with
            items or anything else that might belong inside an &lt;ItemGroup&gt;.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="AddNewPropertyGroup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildPropertyGroup AddNewPropertyGroup (bool insertAtEndOfProject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildPropertyGroup AddNewPropertyGroup(bool insertAtEndOfProject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.AddNewPropertyGroup(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddNewPropertyGroup (insertAtEndOfProject As Boolean) As BuildPropertyGroup" />
      <MemberSignature Language="F#" Value="member this.AddNewPropertyGroup : bool -&gt; Microsoft.Build.BuildEngine.BuildPropertyGroup" Usage="project.AddNewPropertyGroup insertAtEndOfProject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::BuildEngine::BuildPropertyGroup ^ AddNewPropertyGroup(bool insertAtEndOfProject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildPropertyGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertAtEndOfProject" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="insertAtEndOfProject" />
        <summary>
            Adds a new &lt;PropertyGroup&gt; element to the project, and returns the
            corresponding BuildPropertyGroup object which can then be populated with
            properties.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="AddNewUsingTaskFromAssemblyFile">
      <MemberSignature Language="C#" Value="public void AddNewUsingTaskFromAssemblyFile (string taskName, string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNewUsingTaskFromAssemblyFile(string taskName, string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNewUsingTaskFromAssemblyFile (taskName As String, assemblyFile As String)" />
      <MemberSignature Language="F#" Value="member this.AddNewUsingTaskFromAssemblyFile : string * string -&gt; unit" Usage="project.AddNewUsingTaskFromAssemblyFile (taskName, assemblyFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNewUsingTaskFromAssemblyFile(System::String ^ taskName, System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskName" />
        <param name="assemblyFile" />
        <summary>
            Adds a new &lt;UsingTask&gt; element to the end of the project
            </summary>
        <remarks>To be added.</remarks>
        <owner>LukaszG</owner>
      </Docs>
    </Member>
    <Member MemberName="AddNewUsingTaskFromAssemblyName">
      <MemberSignature Language="C#" Value="public void AddNewUsingTaskFromAssemblyName (string taskName, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddNewUsingTaskFromAssemblyName(string taskName, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.AddNewUsingTaskFromAssemblyName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddNewUsingTaskFromAssemblyName (taskName As String, assemblyName As String)" />
      <MemberSignature Language="F#" Value="member this.AddNewUsingTaskFromAssemblyName : string * string -&gt; unit" Usage="project.AddNewUsingTaskFromAssemblyName (taskName, assemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddNewUsingTaskFromAssemblyName(System::String ^ taskName, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="taskName" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskName" />
        <param name="assemblyName" />
        <summary>
            Adds a new &lt;UsingTask&gt; element to the end of the project
            </summary>
        <remarks>To be added.</remarks>
        <owner>LukaszG</owner>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Builds the project.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Builds the default targets in this project.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string targetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string targetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targetName As String) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build targetName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ targetName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetName" />
        <summary>
            Builds the specified target in this project.
            </summary>
        <returns />
        <remarks>To be added.</remarks>
        <owner>JomoF</owner>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targetNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targetNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targetNames As String()) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targetNames" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targetNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targetNames" />
        <summary>
            Builds the specified list of targets in this project.
            </summary>
        <returns />
        <remarks>
            This is the public method that host IDEs can call to build a project.
            It just turns around and calls "BuildProject" on the engine object.
            All builds must go through the engine object, because it needs to
            keep track of the projects that are currently in progress, so that
            we don't end up in infinite loops when we have circular project-to-
            project dependencies.
            </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targetNames, System.Collections.IDictionary targetOutputs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targetNames, class System.Collections.IDictionary targetOutputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targetNames As String(), targetOutputs As IDictionary) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * System.Collections.IDictionary -&gt; bool" Usage="project.Build (targetNames, targetOutputs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targetNames, System::Collections::IDictionary ^ targetOutputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="targetOutputs" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="targetNames" />
        <param name="targetOutputs" />
        <summary>
            Builds the specified list of targets in this project, and returns the target outputs.
            </summary>
        <returns />
        <remarks>
            This is the public method that host IDEs can call to build a project.
            It just turns around and calls "BuildProject" on the engine object.
            All builds must go through the engine object, because it needs to
            keep track of the projects that are currently in progress, so that
            we don't end up in infinite loops when we have circular project-to-
            project dependencies.
            </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targetNames, System.Collections.IDictionary targetOutputs, Microsoft.Build.BuildEngine.BuildSettings buildFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targetNames, class System.Collections.IDictionary targetOutputs, valuetype Microsoft.Build.BuildEngine.BuildSettings buildFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Build(System.String[],System.Collections.IDictionary,Microsoft.Build.BuildEngine.BuildSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targetNames As String(), targetOutputs As IDictionary, buildFlags As BuildSettings) As Boolean" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * System.Collections.IDictionary * Microsoft.Build.BuildEngine.BuildSettings -&gt; bool" Usage="project.Build (targetNames, targetOutputs, buildFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targetNames, System::Collections::IDictionary ^ targetOutputs, Microsoft::Build::BuildEngine::BuildSettings buildFlags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNames" Type="System.String[]" />
        <Parameter Name="targetOutputs" Type="System.Collections.IDictionary" />
        <Parameter Name="buildFlags" Type="Microsoft.Build.BuildEngine.BuildSettings" />
      </Parameters>
      <Docs>
        <param name="targetNames" />
        <param name="targetOutputs" />
        <param name="buildFlags" />
        <summary>
            Builds the specified list of targets in this project using the specified
            flags, and returns the target outputs.
            </summary>
        <returns />
        <remarks>
            This is the public method that host IDEs can call to build a project.
            It just turns around and calls "BuildProject" on the engine object.
            All builds must go through the engine object, because it needs to
            keep track of the projects that are currently in progress, so that
            we don't end up in infinite loops when we have circular project-to-
            project dependencies.
            </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="BuildEnabled">
      <MemberSignature Language="C#" Value="public bool BuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.BuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property BuildEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.BuildEnabled : bool with get, set" Usage="Microsoft.Build.BuildEngine.Project.BuildEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BuildEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            This controls whether or not the building of targets/tasks is enabled for this
            project.  This is for security purposes in case a host wants to closely
            control which projects it allows to run targets/tasks.  By default, for a newly
            created project, we will use whatever setting is in the parent engine.
            </summary>
        <value>
          <see langword="true" /> if the project is enabled for building tasks and targets; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 By default, this property uses value of the <xref:Microsoft.Build.BuildEngine.Engine.BuildEnabled%2A> property of the project's <xref:Microsoft.Build.BuildEngine.Project.ParentEngine%2A>.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="DefaultTargets">
      <MemberSignature Language="C#" Value="public string DefaultTargets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.DefaultTargets" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultTargets As String" />
      <MemberSignature Language="F#" Value="member this.DefaultTargets : string with get, set" Usage="Microsoft.Build.BuildEngine.Project.DefaultTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultTargets { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-write accessor for the "DefaultTargets" attribute of the
            &lt;Project&gt; element.  This is passed in and out as a semicolon-separated
            list of target names.
            </summary>
        <value>A semi-colon (;) delimited list of the targets specified in the <c>DefaultTargets</c> attribute.</value>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="DefaultToolsVersion">
      <MemberSignature Language="C#" Value="public string DefaultToolsVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultToolsVersion As String" />
      <MemberSignature Language="F#" Value="member this.DefaultToolsVersion : string with get, set" Usage="Microsoft.Build.BuildEngine.Project.DefaultToolsVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultToolsVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Public read-write accessor for the ToolsVersion xml attribute found on the
             &lt;Project /&gt; element.  If this attribute is not present on the &lt;Project/&gt;
             element, getting the value will return the default tools version of the parent Engine.
            
             NOTE: This value is distinct from the effective tools version used during a build,
             as that value may be overridden during construction of the Project instance or
             by setting the Project.ToolsVersion property. Setting this attribute value will not change the
             effective tools version if it has been overridden. To change the effective tools version,
             set the Project.ToolsVersion property.
             </summary>
        <value>A string representing the Tools version.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the <xref:Microsoft.Build.BuildEngine.Project.ToolsVersion%2A> attribute is not present on the [Project element](/visualstudio/msbuild/project-element-msbuild), getting the value returns the default Tools version of the parent <xref:Microsoft.Build.BuildEngine>.  
  
 The <xref:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion%2A> value can differ from the Tools version used during a build if its value is overridden during construction of the <xref:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion%2A> instance or it is set to a specific value with the <xref:Microsoft.Build.BuildEngine.Project.ToolsVersion%2A> property. Setting the <xref:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion%2A> value cannot change the Tools version if it has been overridden, but you can change the Tools version using the <xref:Microsoft.Build.BuildEngine.Project.ToolsVersion%2A> property.  
  
 For more information about Tools versions, see [MSBuild ToolSet (ToolsVersion)](/visualstudio/msbuild/msbuild-toolset-toolsversion).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="Microsoft.Build.BuildEngine.Project.Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Internal method for getting the project file encoding. When we have the managed vsproject assembly, this should be made public.
            </summary>
        <value>An <see cref="T:System.Text.Encoding" /> value of the project file.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedItems">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItemGroup EvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.BuildItemGroup EvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.EvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedItems As BuildItemGroup" />
      <MemberSignature Language="F#" Value="member this.EvaluatedItems : Microsoft.Build.BuildEngine.BuildItemGroup" Usage="Microsoft.Build.BuildEngine.Project.EvaluatedItems" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::BuildItemGroup ^ EvaluatedItems { Microsoft::Build::BuildEngine::BuildItemGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItemGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-only accessor for the final collection of evaluated items, taking
            into account all conditions and property expansions.  Through this
            collection, the caller can modify any of the items present, and it
            will be reflected in the project file the next time it is saved.
            However, adding or deleting items from this collection will not impact
            the project.
            </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> containing the items evaluated during the build.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned <xref:Microsoft.Build.BuildEngine.BuildItemGroup> contains all the evaluated items in the project after wildcard and property expansion. The items in this property represent the actual items used during the build process. This property value is generated every time something in the project changes. Changes to existing items in this collection will be reflected the next time the project is saved, but adding or deleting items will not impact the project.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItemGroup EvaluatedItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.BuildItemGroup EvaluatedItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.EvaluatedItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedItemsIgnoringCondition As BuildItemGroup" />
      <MemberSignature Language="F#" Value="member this.EvaluatedItemsIgnoringCondition : Microsoft.Build.BuildEngine.BuildItemGroup" Usage="Microsoft.Build.BuildEngine.Project.EvaluatedItemsIgnoringCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::BuildItemGroup ^ EvaluatedItemsIgnoringCondition { Microsoft::Build::BuildEngine::BuildItemGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItemGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Read-only accessor for the collection of evaluated items, taking into
             account property expansions and wildcards, but ignoring "Condition"s.
             This way, an IDE can display all items regardless of whether they're
             relevant for a particular build flavor or not.  Through this
             collection, the caller can modify any of the items present, and it
             will be reflected in the project file the next time it is saved.
             However, adding or deleting items from this collection will not impact
             the project.
            
             See the comments for the "evaluatedItemsIgnoringCondition" member
             variable up above.
             </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroup" /> containing all items in a project.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned <xref:Microsoft.Build.BuildEngine.BuildItemGroup> contains all items in the project after wildcard and property expansion, including those that were not used during the build process due to `Condition` attributes evaluating to `false`. This property value is only generated when certain changes occur, such as a new [Import](/visualstudio/msbuild/import-element-msbuild) element being added to the project. Adding or deleting items from this property does not impact the project.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildPropertyGroup EvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.BuildPropertyGroup EvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.EvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedProperties As BuildPropertyGroup" />
      <MemberSignature Language="F#" Value="member this.EvaluatedProperties : Microsoft.Build.BuildEngine.BuildPropertyGroup" Usage="Microsoft.Build.BuildEngine.Project.EvaluatedProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::BuildPropertyGroup ^ EvaluatedProperties { Microsoft::Build::BuildEngine::BuildPropertyGroup ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildPropertyGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             Read-only accessor for the final set of evaluated properties for
             this project.  This takes into account all conditions and property
             expansions, and gives back a single linear collection of project-level
             properties, which includes global properties, environment variable
             properties, reserved properties, and normal/imported properties.
             Through this collection, the caller can modify any normal
             properties, and the changes will be reflected in the project file
             when it is saved again.  However, adding or deleting properties
             from this collection will not impact the project.
            
             PERF WARNING: cloning a BuildPropertyGroup can be very expensive -- use
             only when a copy of the entire property bag is strictly necessary
             </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> containing the properties evaluated during the build.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The returned <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> contains all the evaluated properties in the project after performing condition evaluation and property expansion. The properties in this collection include global properties, environment variables, reserved properties, and imported properties. Changes to existing properties in this collection will be reflected the next time the project is saved, but adding or deleting properties will not impact the project.  
  
> [!NOTE]
>  Cloning a <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> can negatively impact performance. Only use a copy of this property when it is strictly necessary.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="FullFileName">
      <MemberSignature Language="C#" Value="public string FullFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.FullFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property FullFileName As String" />
      <MemberSignature Language="F#" Value="member this.FullFileName : string with get, set" Usage="Microsoft.Build.BuildEngine.Project.FullFileName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets or sets the fully qualified path + filename of the project file. This could be empty-string if the project
            doesn't have a file associated with it -- for example, if we were given the XML in memory.
            </summary>
        <value>The full path of the project file.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This property is an empty `string` if the project does not have a file associated with it.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="GetConditionedPropertyValues">
      <MemberSignature Language="C#" Value="public string[] GetConditionedPropertyValues (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetConditionedPropertyValues(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.GetConditionedPropertyValues(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetConditionedPropertyValues (propertyName As String) As String()" />
      <MemberSignature Language="F#" Value="member this.GetConditionedPropertyValues : string -&gt; string[]" Usage="project.GetConditionedPropertyValues propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetConditionedPropertyValues(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName" />
        <summary>
            This returns a list of possible values for a particular property.  It
            gathers this list by looking at all of the "Condition" attributes
            in the project file.
            </summary>
        <returns />
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This method generates the list of possible values by inspecting all of the [Condition](/visualstudio/msbuild/msbuild-conditions) attributes in the project that involve the property.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemsByName">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItemGroup GetEvaluatedItemsByName (string itemName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildItemGroup GetEvaluatedItemsByName(string itemName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvaluatedItemsByName (itemName As String) As BuildItemGroup" />
      <MemberSignature Language="F#" Value="member this.GetEvaluatedItemsByName : string -&gt; Microsoft.Build.BuildEngine.BuildItemGroup" Usage="project.GetEvaluatedItemsByName itemName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::BuildEngine::BuildItemGroup ^ GetEvaluatedItemsByName(System::String ^ itemName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItemGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemName" />
        <summary>
            Retrieves a group of evaluated items of a particular item type.
            </summary>
        <returns>items of requested type</returns>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemsByNameIgnoringCondition">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItemGroup GetEvaluatedItemsByNameIgnoringCondition (string itemName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.BuildEngine.BuildItemGroup GetEvaluatedItemsByNameIgnoringCondition(string itemName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedItemsByNameIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvaluatedItemsByNameIgnoringCondition (itemName As String) As BuildItemGroup" />
      <MemberSignature Language="F#" Value="member this.GetEvaluatedItemsByNameIgnoringCondition : string -&gt; Microsoft.Build.BuildEngine.BuildItemGroup" Usage="project.GetEvaluatedItemsByNameIgnoringCondition itemName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::BuildEngine::BuildItemGroup ^ GetEvaluatedItemsByNameIgnoringCondition(System::String ^ itemName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItemGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemName" />
        <summary>
            Retrieves a group of evaluated items of a particular item type. This is really just about the items that are persisted
            in the project file, ignoring all "Condition"s, so that an IDE can display all items regardless of whether they're
            relevant for a particular build flavor or not.
            </summary>
        <returns>items of requested type</returns>
        <remarks>See the comments for the "evaluatedItemsByNameIgnoringCondition" member variable up above.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedProperty">
      <MemberSignature Language="C#" Value="public string GetEvaluatedProperty (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEvaluatedProperty(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.GetEvaluatedProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEvaluatedProperty (propertyName As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetEvaluatedProperty : string -&gt; string" Usage="project.GetEvaluatedProperty propertyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEvaluatedProperty(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Name of the property to retrieve.</param>
        <summary>
            Returns a single evaluated property value.
            Call this to retrieve a few properties. If you need to retrieve many properties
            use EvaluatedProperty accessor.
            </summary>
        <returns>The property value.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If you need to retrieve a large number of property values, use the <xref:Microsoft.Build.BuildEngine.Project.EvaluatedProperties%2A> property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProjectExtensions">
      <MemberSignature Language="C#" Value="public string GetProjectExtensions (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetProjectExtensions(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.GetProjectExtensions(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProjectExtensions (id As String) As String" />
      <MemberSignature Language="F#" Value="member this.GetProjectExtensions : string -&gt; string" Usage="project.GetProjectExtensions id" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetProjectExtensions(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id" />
        <summary>
            Returns the project extensions string for the given ID.
            </summary>
        <returns>String value of specified ID.</returns>
        <remarks>To be added.</remarks>
        <owner>JomoF</owner>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildPropertyGroup GlobalProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.BuildPropertyGroup GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property GlobalProperties As BuildPropertyGroup" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : Microsoft.Build.BuildEngine.BuildPropertyGroup with get, set" Usage="Microsoft.Build.BuildEngine.Project.GlobalProperties" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::BuildPropertyGroup ^ GlobalProperties { Microsoft::Build::BuildEngine::BuildPropertyGroup ^ get(); void set(Microsoft::Build::BuildEngine::BuildPropertyGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildPropertyGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-write accessor for the project's global properties collection.
            To set or modify global properties, a caller can hand us an entire
            new BuildPropertyGroup here, or can simply modify the properties in the
            BuildPropertyGroup that is already here.  Global properties are those
            defined via the "/p:" switch on the MSBuild.exe command-line, or
            properties like "Configuration" set by the IDE prior to invoking MSBuild.
            </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroup" /> containing the global properties for the project.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Global properties are properties set with the **/property** switch on the command line, or properties set by the integrated development environment before invoking MSBuild. For more information, see [MSBuild Command-Line Reference](/visualstudio/msbuild/msbuild-command-line-reference).  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="HasToolsVersionAttribute">
      <MemberSignature Language="C#" Value="public bool HasToolsVersionAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasToolsVersionAttribute" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.HasToolsVersionAttribute" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasToolsVersionAttribute As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasToolsVersionAttribute : bool" Usage="Microsoft.Build.BuildEngine.Project.HasToolsVersionAttribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasToolsVersionAttribute { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Public read  accessor to determine if the Project file has the ToolsVersion xml attribute
            e.g. &lt;Project ToolsVersion="3.5"/&gt; . This is different to knowing the inherited
            value and allows us to spot Whidbey (VS 8.0) projects.
            </summary>
        <value>
          <see langword="true" /> if the project has the ToolsVersion attribute; otherwise, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 An example ToolsVersion attribute is `Project ToolsVersion="3.5"`. This attribute enables projects to target .NET Framework versions, currently 2.0, 3.0, and 3.5.
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.ImportCollection Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.ImportCollection Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As ImportCollection" />
      <MemberSignature Language="F#" Value="member this.Imports : Microsoft.Build.BuildEngine.ImportCollection" Usage="Microsoft.Build.BuildEngine.Project.Imports" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::ImportCollection ^ Imports { Microsoft::Build::BuildEngine::ImportCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.ImportCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-only accessor for the imported projects of this project
            </summary>
        <value>An <see cref="T:Microsoft.Build.BuildEngine.ImportCollection" /> of the projects imported into this project.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Imported projects are specified by the [Import](/visualstudio/msbuild/import-element-msbuild) element in the project.  
  
 ]]></format>
        </remarks>
        <owner>LukaszG</owner>
      </Docs>
    </Member>
    <Member MemberName="InitialTargets">
      <MemberSignature Language="C#" Value="public string InitialTargets { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InitialTargets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.InitialTargets" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialTargets As String" />
      <MemberSignature Language="F#" Value="member this.InitialTargets : string with get, set" Usage="Microsoft.Build.BuildEngine.Project.InitialTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InitialTargets { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-write accessor for the "InitialTargets" attribute of the
            &lt;Project&gt; element.  This is passed in and out as a semicolon-separated
            list of target names.  The "get" returns all of the initial targets in both
            the main project and all imported projects (after property expansion).  The
            "set" only sets the initial targets for the main project.
            </summary>
        <value>A semi-colon (;) delimited list of the targets specified in the <c>InitialTargets</c> attribute.</value>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.BuildEngine.Project.IsDirty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Tells you whether this project file is dirty such that it would need
            to get saved to disk.
            </summary>
        <value>
          <see langword="true" /> if the project has changed and needs to be saved; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="IsValidated">
      <MemberSignature Language="C#" Value="public bool IsValidated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValidated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.IsValidated" />
      <MemberSignature Language="VB.NET" Value="Public Property IsValidated As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsValidated : bool with get, set" Usage="Microsoft.Build.BuildEngine.Project.IsValidated" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValidated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates if the project (file) is to be validated against a schema.
            </summary>
        <value>
          <see langword="true" /> if the project is to be validated against a schema; otherwise, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <owner>SumedhK</owner>
      </Docs>
    </Member>
    <Member MemberName="ItemGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildItemGroupCollection ItemGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.BuildItemGroupCollection ItemGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.ItemGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemGroups As BuildItemGroupCollection" />
      <MemberSignature Language="F#" Value="member this.ItemGroups : Microsoft.Build.BuildEngine.BuildItemGroupCollection" Usage="Microsoft.Build.BuildEngine.Project.ItemGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::BuildItemGroupCollection ^ ItemGroups { Microsoft::Build::BuildEngine::BuildItemGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildItemGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-only accessor for the raw item groups of this project.
            This is essentially a reflection of the data in the XML for this
            project's items as well as any &lt;Import&gt;'d projects.
            </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.BuildItemGroupCollection" /> containing the item groups specified in the project.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> returned by this property contains the item groups in this project and all imported projects.  
  
   
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty><xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItemGroup/GetEnumerator/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_ListItemsAndProperties/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Loads the contents of a project file into the <see cref="T:Microsoft.Build.BuildEngine.Project" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItemGroup/GetEnumerator/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_ListItemsAndProperties/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader textReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader textReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (textReader As TextReader)" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader -&gt; unit" Usage="project.Load textReader" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ textReader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" />
      </Parameters>
      <Docs>
        <param name="textReader">The <see cref="T:System.IO.TextReader" /> to load.</param>
        <summary>
            Reads in the contents of this project from a string containing the Xml contents.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string projectFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string projectFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (projectFileName As String)" />
      <MemberSignature Language="F#" Value="member this.Load : string -&gt; unit" Usage="project.Load projectFileName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ projectFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFileName">The project file to load.</param>
        <summary>
            Reads in the contents of this project from a project XML file on disk.
            </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty>,  <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItemGroup/GetEnumerator/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_ListItemsAndProperties/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.IO.TextReader textReader, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(class System.IO.TextReader textReader, valuetype Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Load(System.IO.TextReader,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (textReader As TextReader, projectLoadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="F#" Value="member this.Load : System.IO.TextReader * Microsoft.Build.BuildEngine.ProjectLoadSettings -&gt; unit" Usage="project.Load (textReader, projectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::IO::TextReader ^ textReader, Microsoft::Build::BuildEngine::ProjectLoadSettings projectLoadSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textReader" Type="System.IO.TextReader" Index="0" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
        <Parameter Name="projectLoadSettings" Type="Microsoft.Build.BuildEngine.ProjectLoadSettings" Index="1" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
      </Parameters>
      <Docs>
        <param name="textReader">A <see cref="T:System.IO.TextReader" /> object containing the project contents.</param>
        <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> value that specifies the settings for the project being loaded.</param>
        <summary>
            Reads in the contents of this project from a string containing the Xml contents.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (string projectFileName, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Load(string projectFileName, valuetype Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Load(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (projectFileName As String, projectLoadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="F#" Value="member this.Load : string * Microsoft.Build.BuildEngine.ProjectLoadSettings -&gt; unit" Usage="project.Load (projectFileName, projectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::String ^ projectFileName, Microsoft::Build::BuildEngine::ProjectLoadSettings projectLoadSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" Index="0" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
        <Parameter Name="projectLoadSettings" Type="Microsoft.Build.BuildEngine.ProjectLoadSettings" Index="1" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
      </Parameters>
      <Docs>
        <param name="projectFileName">A string representing the name of the file to load.</param>
        <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> value that specifies the settings for the project being loaded.</param>
        <summary>
            Reads in the contents of this project from a project XML file on disk.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadXml">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Loads the contents of the specified string into the <see cref="T:Microsoft.Build.BuildEngine.Project" /> object.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (string projectXml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(string projectXml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (projectXml As String)" />
      <MemberSignature Language="F#" Value="member this.LoadXml : string -&gt; unit" Usage="project.LoadXml projectXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::String ^ projectXml);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectXml" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectXml">The string of XML to load.</param>
        <summary>
            Reads in the contents of this project from a string containing the Xml contents.
            </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItem/Overview/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_AddNewItem/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (string projectXml, Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(string projectXml, valuetype Microsoft.Build.BuildEngine.ProjectLoadSettings projectLoadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.LoadXml(System.String,Microsoft.Build.BuildEngine.ProjectLoadSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (projectXml As String, projectLoadSettings As ProjectLoadSettings)" />
      <MemberSignature Language="F#" Value="member this.LoadXml : string * Microsoft.Build.BuildEngine.ProjectLoadSettings -&gt; unit" Usage="project.LoadXml (projectXml, projectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::String ^ projectXml, Microsoft::Build::BuildEngine::ProjectLoadSettings projectLoadSettings);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectXml" Type="System.String" Index="0" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
        <Parameter Name="projectLoadSettings" Type="Microsoft.Build.BuildEngine.ProjectLoadSettings" Index="1" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
      </Parameters>
      <Docs>
        <param name="projectXml">A string containing the project contents.</param>
        <param name="projectLoadSettings">A <see cref="T:Microsoft.Build.BuildEngine.ProjectLoadSettings" /> value that specifies the settings for the project being loaded.</param>
        <summary>
            Reads in the contents of this project from a string containing the Xml contents.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:Microsoft.Build.BuildEngine.InvalidProjectFileException" />
      </Docs>
    </Member>
    <Member MemberName="MarkProjectAsDirty">
      <MemberSignature Language="C#" Value="public void MarkProjectAsDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkProjectAsDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.MarkProjectAsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkProjectAsDirty ()" />
      <MemberSignature Language="F#" Value="member this.MarkProjectAsDirty : unit -&gt; unit" Usage="project.MarkProjectAsDirty " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkProjectAsDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            This forces a re-evaluation of the project the next time somebody
            calls EvaluatedProperties or EvaluatedItems.  It is also a signal
            that the project file is dirty and needs to be saved to disk.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="ParentEngine">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.Engine ParentEngine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.Engine ParentEngine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.ParentEngine" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentEngine As Engine" />
      <MemberSignature Language="F#" Value="member this.ParentEngine : Microsoft.Build.BuildEngine.Engine" Usage="Microsoft.Build.BuildEngine.Project.ParentEngine" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::Engine ^ ParentEngine { Microsoft::Build::BuildEngine::Engine ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.Engine</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the parent engine object.
            </summary>
        <value>Engine object.</value>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="PropertyGroups">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.BuildPropertyGroupCollection PropertyGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.BuildPropertyGroupCollection PropertyGroups" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.PropertyGroups" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyGroups As BuildPropertyGroupCollection" />
      <MemberSignature Language="F#" Value="member this.PropertyGroups : Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" Usage="Microsoft.Build.BuildEngine.Project.PropertyGroups" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::BuildPropertyGroupCollection ^ PropertyGroups { Microsoft::Build::BuildEngine::BuildPropertyGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.BuildPropertyGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-only accessor for the raw property groups of this project.
            This is essentially a reflection of the data in the XML for this
            project's properties as well as any &lt;Import&gt;'d projects.
            </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection" /> containing the property groups specified in the project.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 The <xref:Microsoft.Build.BuildEngine.BuildPropertyGroupCollection> returned by this property contains the property groups in this project and all imported projects.  
  
   
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildProperty><xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildPropertyGroup> classes to list all the items and properties in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItemGroup/GetEnumerator/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_ListItemsAndProperties/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllItemGroups">
      <MemberSignature Language="C#" Value="public void RemoveAllItemGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllItemGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemoveAllItemGroups" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllItemGroups ()" />
      <MemberSignature Language="F#" Value="member this.RemoveAllItemGroups : unit -&gt; unit" Usage="project.RemoveAllItemGroups " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllItemGroups();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes all &lt;ItemGroup&gt;'s from the main project file, but doesn't
            touch anything in any of the imported project files.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemoveAllPropertyGroups">
      <MemberSignature Language="C#" Value="public void RemoveAllPropertyGroups ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveAllPropertyGroups() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemoveAllPropertyGroups" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAllPropertyGroups ()" />
      <MemberSignature Language="F#" Value="member this.RemoveAllPropertyGroups : unit -&gt; unit" Usage="project.RemoveAllPropertyGroups " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveAllPropertyGroups();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Removes all &lt;PropertyGroup&gt;'s from the main project file, but doesn't
            touch anything in any of the imported project files.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemoveImportedPropertyGroup">
      <MemberSignature Language="C#" Value="public void RemoveImportedPropertyGroup (Microsoft.Build.BuildEngine.BuildPropertyGroup propertyGroupToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveImportedPropertyGroup(class Microsoft.Build.BuildEngine.BuildPropertyGroup propertyGroupToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemoveImportedPropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveImportedPropertyGroup (propertyGroupToRemove As BuildPropertyGroup)" />
      <MemberSignature Language="F#" Value="member this.RemoveImportedPropertyGroup : Microsoft.Build.BuildEngine.BuildPropertyGroup -&gt; unit" Usage="project.RemoveImportedPropertyGroup propertyGroupToRemove" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveImportedPropertyGroup(Microsoft::Build::BuildEngine::BuildPropertyGroup ^ propertyGroupToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyGroupToRemove" Type="Microsoft.Build.BuildEngine.BuildPropertyGroup" Index="0" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
      </Parameters>
      <Docs>
        <param name="propertyGroupToRemove" />
        <summary>
            Removes a &lt;PropertyGroup&gt; from the main project file.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public void RemoveItem (Microsoft.Build.BuildEngine.BuildItem itemToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItem(class Microsoft.Build.BuildEngine.BuildItem itemToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemoveItem(Microsoft.Build.BuildEngine.BuildItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItem (itemToRemove As BuildItem)" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.BuildEngine.BuildItem -&gt; unit" Usage="project.RemoveItem itemToRemove" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItem(Microsoft::Build::BuildEngine::BuildItem ^ itemToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemToRemove" Type="Microsoft.Build.BuildEngine.BuildItem" />
      </Parameters>
      <Docs>
        <param name="itemToRemove" />
        <summary>
            Removes an item from the main project file.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemoveItemGroup">
      <MemberSignature Language="C#" Value="public void RemoveItemGroup (Microsoft.Build.BuildEngine.BuildItemGroup itemGroupToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItemGroup(class Microsoft.Build.BuildEngine.BuildItemGroup itemGroupToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroup(Microsoft.Build.BuildEngine.BuildItemGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItemGroup (itemGroupToRemove As BuildItemGroup)" />
      <MemberSignature Language="F#" Value="member this.RemoveItemGroup : Microsoft.Build.BuildEngine.BuildItemGroup -&gt; unit" Usage="project.RemoveItemGroup itemGroupToRemove" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItemGroup(Microsoft::Build::BuildEngine::BuildItemGroup ^ itemGroupToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemGroupToRemove" Type="Microsoft.Build.BuildEngine.BuildItemGroup" />
      </Parameters>
      <Docs>
        <param name="itemGroupToRemove" />
        <summary>
            Removes a &lt;ItemGroup&gt; from the main project file.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemoveItemGroupsWithMatchingCondition">
      <MemberSignature Language="C#" Value="public void RemoveItemGroupsWithMatchingCondition (string matchCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItemGroupsWithMatchingCondition(string matchCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemoveItemGroupsWithMatchingCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItemGroupsWithMatchingCondition (matchCondition As String)" />
      <MemberSignature Language="F#" Value="member this.RemoveItemGroupsWithMatchingCondition : string -&gt; unit" Usage="project.RemoveItemGroupsWithMatchingCondition matchCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItemGroupsWithMatchingCondition(System::String ^ matchCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchCondition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="matchCondition" />
        <summary>
            Removes all &lt;ItemGroup&gt;'s from the main project file that have a
            specific "Condition".  This will not remove any item groups from
            imported project files.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemoveItemsByName">
      <MemberSignature Language="C#" Value="public void RemoveItemsByName (string itemName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItemsByName(string itemName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemoveItemsByName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItemsByName (itemName As String)" />
      <MemberSignature Language="F#" Value="member this.RemoveItemsByName : string -&gt; unit" Usage="project.RemoveItemsByName itemName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItemsByName(System::String ^ itemName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemName" />
        <summary>
            Removes all items of a particular type from the main project file.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyGroup">
      <MemberSignature Language="C#" Value="public void RemovePropertyGroup (Microsoft.Build.BuildEngine.BuildPropertyGroup propertyGroupToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyGroup(class Microsoft.Build.BuildEngine.BuildPropertyGroup propertyGroupToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroup(Microsoft.Build.BuildEngine.BuildPropertyGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyGroup (propertyGroupToRemove As BuildPropertyGroup)" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyGroup : Microsoft.Build.BuildEngine.BuildPropertyGroup -&gt; unit" Usage="project.RemovePropertyGroup propertyGroupToRemove" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyGroup(Microsoft::Build::BuildEngine::BuildPropertyGroup ^ propertyGroupToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyGroupToRemove" Type="Microsoft.Build.BuildEngine.BuildPropertyGroup" />
      </Parameters>
      <Docs>
        <param name="propertyGroupToRemove" />
        <summary>
            Removes a &lt;PropertyGroup&gt; from the main project file.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemovePropertyGroupsWithMatchingCondition">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Removes all &lt;PropertyGroup&gt;'s from the main project file that have a specific "Condition."</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This will not remove any property groups from imported project files.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemovePropertyGroupsWithMatchingCondition">
      <MemberSignature Language="C#" Value="public void RemovePropertyGroupsWithMatchingCondition (string matchCondition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyGroupsWithMatchingCondition(string matchCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyGroupsWithMatchingCondition (matchCondition As String)" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyGroupsWithMatchingCondition : string -&gt; unit" Usage="project.RemovePropertyGroupsWithMatchingCondition matchCondition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyGroupsWithMatchingCondition(System::String ^ matchCondition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchCondition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="matchCondition">Condition on the PropertyGroups</param>
        <summary>
            Removes all &lt;PropertyGroup&gt;'s from the main project file that have a
            specific "Condition".  This will not remove any property groups from
            imported project files.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyGroupsWithMatchingCondition">
      <MemberSignature Language="C#" Value="public void RemovePropertyGroupsWithMatchingCondition (string matchCondition, bool includeImportedPropertyGroups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyGroupsWithMatchingCondition(string matchCondition, bool includeImportedPropertyGroups) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.RemovePropertyGroupsWithMatchingCondition(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyGroupsWithMatchingCondition (matchCondition As String, includeImportedPropertyGroups As Boolean)" />
      <MemberSignature Language="F#" Value="member this.RemovePropertyGroupsWithMatchingCondition : string * bool -&gt; unit" Usage="project.RemovePropertyGroupsWithMatchingCondition (matchCondition, includeImportedPropertyGroups)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyGroupsWithMatchingCondition(System::String ^ matchCondition, bool includeImportedPropertyGroups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matchCondition" Type="System.String" Index="0" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
        <Parameter Name="includeImportedPropertyGroups" Type="System.Boolean" Index="1" FrameworkAlternate="msbuild-17;msbuild-17-netcore;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netframework-4.8.1" />
      </Parameters>
      <Docs>
        <param name="matchCondition">Condition on the PropertyGroups</param>
        <param name="includeImportedPropertyGroups" />
        <summary>
            Removes all &lt;PropertyGroup&gt;'s from the main project file that have a
            specific "Condition".  This will not remove any property groups from
            imported project files.
            </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 This will not remove any property groups from imported project files.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="ResetBuildStatus">
      <MemberSignature Language="C#" Value="public void ResetBuildStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetBuildStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.ResetBuildStatus" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetBuildStatus ()" />
      <MemberSignature Language="F#" Value="member this.ResetBuildStatus : unit -&gt; unit" Usage="project.ResetBuildStatus " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetBuildStatus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Resets the state of each target in this project back to "NotStarted",
            so that a subsequent build will actually build those targets again.
            </summary>
        <remarks>To be added.</remarks>
        <owner>rgoel</owner>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Saves the project to a file.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter textWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter textWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (textWriter As TextWriter)" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save textWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ textWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textWriter" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="textWriter" />
        <summary>
            Saves the current contents of the project to a TextWriter object.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string projectFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string projectFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (projectFileName As String)" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save projectFileName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ projectFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFileName" />
        <summary>
            Saves the current contents of the project to an XML project file on disk.
            This method will NOT add the ?xml node if it's not already present
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string projectFileName, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string projectFileName, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (projectFileName As String, encoding As Encoding)" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (projectFileName, encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ projectFileName, System::Text::Encoding ^ encoding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projectFileName" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="projectFileName" />
        <param name="encoding" />
        <summary>
            Saves the current contents of the project to an XML project file on
            disk using the supplied encoding.
            </summary>
        <remarks>To be added.</remarks>
        <owner>LukaszG</owner>
      </Docs>
    </Member>
    <Member MemberName="SchemaFile">
      <MemberSignature Language="C#" Value="public string SchemaFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SchemaFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.SchemaFile" />
      <MemberSignature Language="VB.NET" Value="Public Property SchemaFile As String" />
      <MemberSignature Language="F#" Value="member this.SchemaFile : string with get, set" Usage="Microsoft.Build.BuildEngine.Project.SchemaFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SchemaFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The schema against which the project (file) and all its imported files are validated.
            </summary>
        <value>The XML schema file to use when validating the project.</value>
        <remarks>To be added.</remarks>
        <owner>SumedhK</owner>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetImportedProperty">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the value of a property in an imported project.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetImportedProperty">
      <MemberSignature Language="C#" Value="public void SetImportedProperty (string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.Project importProject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedProperty(string propertyName, string propertyValue, string condition, class Microsoft.Build.BuildEngine.Project importProject) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedProperty (propertyName As String, propertyValue As String, condition As String, importProject As Project)" />
      <MemberSignature Language="F#" Value="member this.SetImportedProperty : string * string * string * Microsoft.Build.BuildEngine.Project -&gt; unit" Usage="project.SetImportedProperty (propertyName, propertyValue, condition, importProject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedProperty(System::String ^ propertyName, System::String ^ propertyValue, System::String ^ condition, Microsoft::Build::BuildEngine::Project ^ importProject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="importProject" Type="Microsoft.Build.BuildEngine.Project" />
      </Parameters>
      <Docs>
        <param name="propertyName" />
        <param name="propertyValue" />
        <param name="condition" />
        <param name="importProject" />
        <summary>
            Sets the value of a property that comes from an imported project.
            Updates the current project (the one this method is called on) with
            a property that has no Xml behind it, and updates the imported project
            with a real backed property.
            </summary>
        <remarks>To be added.</remarks>
        <owner>DavidLe</owner>
      </Docs>
    </Member>
    <Member MemberName="SetImportedProperty">
      <MemberSignature Language="C#" Value="public void SetImportedProperty (string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.Project importedProject, Microsoft.Build.BuildEngine.PropertyPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedProperty(string propertyName, string propertyValue, string condition, class Microsoft.Build.BuildEngine.Project importedProject, valuetype Microsoft.Build.BuildEngine.PropertyPosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedProperty (propertyName As String, propertyValue As String, condition As String, importedProject As Project, position As PropertyPosition)" />
      <MemberSignature Language="F#" Value="member this.SetImportedProperty : string * string * string * Microsoft.Build.BuildEngine.Project * Microsoft.Build.BuildEngine.PropertyPosition -&gt; unit" Usage="project.SetImportedProperty (propertyName, propertyValue, condition, importedProject, position)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedProperty(System::String ^ propertyName, System::String ^ propertyValue, System::String ^ condition, Microsoft::Build::BuildEngine::Project ^ importedProject, Microsoft::Build::BuildEngine::PropertyPosition position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="importedProject" Type="Microsoft.Build.BuildEngine.Project" />
        <Parameter Name="position" Type="Microsoft.Build.BuildEngine.PropertyPosition" />
      </Parameters>
      <Docs>
        <param name="propertyName">Property name.</param>
        <param name="propertyValue">Property value.</param>
        <param name="condition">The condition for this property.</param>
        <param name="importedProject">Specifies the project the property is imported from.</param>
        <param name="position">Specifies the position within the project file for the property.</param>
        <summary>
            Set a property at a particular position inside an imported project file.
            The property will be in a group that has the specified condition.
            If necessary, a new property or property group will be created.
            </summary>
        <remarks>To be added.</remarks>
        <owner>DavidLe</owner>
      </Docs>
    </Member>
    <Member MemberName="SetImportedProperty">
      <MemberSignature Language="C#" Value="public void SetImportedProperty (string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.Project importedProject, Microsoft.Build.BuildEngine.PropertyPosition position, bool treatPropertyValueAsLiteral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedProperty(string propertyName, string propertyValue, string condition, class Microsoft.Build.BuildEngine.Project importedProject, valuetype Microsoft.Build.BuildEngine.PropertyPosition position, bool treatPropertyValueAsLiteral) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetImportedProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.Project,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedProperty (propertyName As String, propertyValue As String, condition As String, importedProject As Project, position As PropertyPosition, treatPropertyValueAsLiteral As Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetImportedProperty : string * string * string * Microsoft.Build.BuildEngine.Project * Microsoft.Build.BuildEngine.PropertyPosition * bool -&gt; unit" Usage="project.SetImportedProperty (propertyName, propertyValue, condition, importedProject, position, treatPropertyValueAsLiteral)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedProperty(System::String ^ propertyName, System::String ^ propertyValue, System::String ^ condition, Microsoft::Build::BuildEngine::Project ^ importedProject, Microsoft::Build::BuildEngine::PropertyPosition position, bool treatPropertyValueAsLiteral);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="importedProject" Type="Microsoft.Build.BuildEngine.Project" />
        <Parameter Name="position" Type="Microsoft.Build.BuildEngine.PropertyPosition" />
        <Parameter Name="treatPropertyValueAsLiteral" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName">Property name.</param>
        <param name="propertyValue">Property value.</param>
        <param name="condition">The condition for this property.</param>
        <param name="importedProject">Specifies the project the property is imported from.</param>
        <param name="position">Specifies the position within the project file for the property.</param>
        <param name="treatPropertyValueAsLiteral" />
        <summary>
            Set a property at a particular position inside an imported project file.
            The property will be in a group that has the specified condition.
            If necessary, a new property or property group will be created.
            </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sets the value of a property and optionally escapes it so that it will be treated as a literal value despite any special characters it may contain.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="SetProjectExtensions">
      <MemberSignature Language="C#" Value="public void SetProjectExtensions (string id, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProjectExtensions(string id, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetProjectExtensions(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProjectExtensions (id As String, content As String)" />
      <MemberSignature Language="F#" Value="member this.SetProjectExtensions : string * string -&gt; unit" Usage="project.SetProjectExtensions (id, content)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProjectExtensions(System::String ^ id, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id" />
        <param name="content" />
        <summary>
            Sets the project extensions string.
            </summary>
        <remarks>To be added.</remarks>
        <owner>JomoF</owner>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetProperty">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Sets the value of the specified property.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, string propertyValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, string propertyValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, propertyValue As String)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; unit" Usage="project.SetProperty (propertyName, propertyValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, System::String ^ propertyValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName" />
        <param name="propertyValue" />
        <summary>
            Sets (or adds) a property to the project at a sensible location.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, string propertyValue, string condition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, string propertyValue, string condition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, propertyValue As String, condition As String)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string * string -&gt; unit" Usage="project.SetProperty (propertyName, propertyValue, condition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, System::String ^ propertyValue, System::String ^ condition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName" />
        <param name="propertyValue" />
        <param name="condition" />
        <summary>
             This method is called from the IDE to set a particular property at
             the project level.  The IDE doesn't care which property group it's
             in, as long as it gets set.  This method will search the existing
             property groups for a property with this name.  If found, it will
             change the value in place.  Otherwise, it will either add a new
             property to that property group, or possibly even add a new property
             group to the project.
            
             This method also takes the "Condition" string for the property group
             that the IDE wants this property placed under.
             </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel, DavidLe</owner>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.PropertyPosition position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, string propertyValue, string condition, valuetype Microsoft.Build.BuildEngine.PropertyPosition position) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, propertyValue As String, condition As String, position As PropertyPosition)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string * string * Microsoft.Build.BuildEngine.PropertyPosition -&gt; unit" Usage="project.SetProperty (propertyName, propertyValue, condition, position)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, System::String ^ propertyValue, System::String ^ condition, Microsoft::Build::BuildEngine::PropertyPosition position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="position" Type="Microsoft.Build.BuildEngine.PropertyPosition" />
      </Parameters>
      <Docs>
        <param name="propertyName">Property name.</param>
        <param name="propertyValue">Property value.</param>
        <param name="condition">The condition for this property.</param>
        <param name="position">Specifies the position within the project file for the property.</param>
        <summary>
            Set a property at a particular position inside the project file.
            The property will be in a group that has the specified condition.
            If necessary, a new property or property group will be created.
            </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.Build.BuildEngine.Project.SetProperty%2A> is called from the integrated development environment (IDE) to set a particular property at the project level. This method searches the existing property groups for a property with this name. If one is found, it changes its value. Otherwise, it either adds a new property to that property group, or adds a new property group to the project. <xref:Microsoft.Build.BuildEngine.Project.SetProperty%2A> uses the `condition` parameter to determine the name of the property group place it in.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string propertyName, string propertyValue, string condition, Microsoft.Build.BuildEngine.PropertyPosition position, bool treatPropertyValueAsLiteral);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetProperty(string propertyName, string propertyValue, string condition, valuetype Microsoft.Build.BuildEngine.PropertyPosition position, bool treatPropertyValueAsLiteral) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.BuildEngine.Project.SetProperty(System.String,System.String,System.String,Microsoft.Build.BuildEngine.PropertyPosition,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (propertyName As String, propertyValue As String, condition As String, position As PropertyPosition, treatPropertyValueAsLiteral As Boolean)" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string * string * Microsoft.Build.BuildEngine.PropertyPosition * bool -&gt; unit" Usage="project.SetProperty (propertyName, propertyValue, condition, position, treatPropertyValueAsLiteral)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ propertyName, System::String ^ propertyValue, System::String ^ condition, Microsoft::Build::BuildEngine::PropertyPosition position, bool treatPropertyValueAsLiteral);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyValue" Type="System.String" />
        <Parameter Name="condition" Type="System.String" />
        <Parameter Name="position" Type="Microsoft.Build.BuildEngine.PropertyPosition" />
        <Parameter Name="treatPropertyValueAsLiteral" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="propertyName" />
        <param name="propertyValue" />
        <param name="condition" />
        <param name="position" />
        <param name="treatPropertyValueAsLiteral" />
        <summary>
            Sets a property, and optionally escapes it so that it will be treated as a literal
            value despite any special characters that may be in it.
            </summary>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.TargetCollection Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.TargetCollection Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As TargetCollection" />
      <MemberSignature Language="F#" Value="member this.Targets : Microsoft.Build.BuildEngine.TargetCollection" Usage="Microsoft.Build.BuildEngine.Project.Targets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::TargetCollection ^ Targets { Microsoft::Build::BuildEngine::TargetCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.TargetCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-only accessor for the target groups of this project.
            </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.TargetCollection" /> of the targets in the project.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Targets are specified by the [Target](/visualstudio/msbuild/target-element-msbuild) element in the project.  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="TimeOfLastDirty">
      <MemberSignature Language="C#" Value="public DateTime TimeOfLastDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime TimeOfLastDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.TimeOfLastDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeOfLastDirty As DateTime" />
      <MemberSignature Language="F#" Value="member this.TimeOfLastDirty : DateTime" Usage="Microsoft.Build.BuildEngine.Project.TimeOfLastDirty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime TimeOfLastDirty { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the timestamp of when the project was last touched in a way
            that would require it to need to be saved.
            </summary>
        <value>The DateTime object indicating when project was dirtied.</value>
        <remarks>To be added.</remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.BuildEngine.Project.ToolsVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             When gotten, returns the effective tools version being used by this project.
             If the tools version is being overridden, the overriding value will be the effective tools version.
             Otherwise, if there is a ToolsVersion attribute on the Project element, that is the effective tools version.
             Otherwise, the default tools version of the parent engine is the effective tools version.
            
             When set, overrides the current tools version of this project with the provided value.
            
             NOTE: This is distinct to the ToolsVersion attribute, if any, on the Project element.
             To get and set the ToolsVersion attribute on the Project element use the Project.DefaultToolsVersion
             property.
             </summary>
        <value>A string representing the version number of the Toolset.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 If the Toolset version is overridden, that value becomes the effective Toolset version. If there is a ToolsVersion attribute on the Project element, then that is the effective Toolset version. Otherwise, the Toolset version is the same as the default Toolset version of the parent engine. When set, <xref:Microsoft.Build.BuildEngine.Project.ToolsVersion%2A> overrides the current Toolset version of the project with the provided value.  
  
 For more information about Toolsets, see [Standard and Custom Toolset Configurations](/visualstudio/msbuild/standard-and-custom-toolset-configurations).  
  
> [!NOTE]
>  To get or set the ToolsVersion attribute on the <xref:Microsoft.Build.BuildEngine.Project> element, use the <xref:Microsoft.Build.BuildEngine.Project.DefaultToolsVersion%2A> property.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsingTasks">
      <MemberSignature Language="C#" Value="public Microsoft.Build.BuildEngine.UsingTaskCollection UsingTasks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.BuildEngine.UsingTaskCollection UsingTasks" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.UsingTasks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UsingTasks As UsingTaskCollection" />
      <MemberSignature Language="F#" Value="member this.UsingTasks : Microsoft.Build.BuildEngine.UsingTaskCollection" Usage="Microsoft.Build.BuildEngine.Project.UsingTasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::BuildEngine::UsingTaskCollection ^ UsingTasks { Microsoft::Build::BuildEngine::UsingTaskCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.BuildEngine.UsingTaskCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-only accessor for the UsingTask elements of this project.
            </summary>
        <value>A <see cref="T:Microsoft.Build.BuildEngine.UsingTaskCollection" /> of the <c>UsingTask</c> elements in the project.</value>
        <remarks>To be added.</remarks>
        <owner>LukaszG</owner>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public string Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.BuildEngine.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As String" />
      <MemberSignature Language="F#" Value="member this.Xml : string" Usage="Microsoft.Build.BuildEngine.Project.Xml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Xml { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Engine</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Read-only accessor for the string of Xml representing this project.
            Used for verification in unit testing.
            </summary>
        <value>The full XML representing the project.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 The following example creates a <xref:Microsoft.Build.BuildEngine.Project> object and uses the <xref:Microsoft.Build.BuildEngine.Project.LoadXml%2A> method to add content to the project. The <xref:Microsoft.Build.BuildEngine.BuildItem>, <xref:Microsoft.Build.BuildEngine.BuildItemGroup>, and <xref:Microsoft.Build.BuildEngine.BuildItemGroupCollection> classes are used to add, remove, and change items in the project.  
  
 :::code language="csharp" source="~/snippets/csharp/Microsoft.Build.BuildEngine/BuildItem/Overview/Program.cs" id="Snippet1":::
 :::code language="vb" source="~/snippets/visualbasic/VS_Snippets_Misc/msbuild_AddNewItem/VB/Module1.vb" id="Snippet1":::  
  
 ]]></format>
        </remarks>
        <owner>RGoel</owner>
      </Docs>
    </Member>
  </Members>
</Type>
