<Type Name="ItemTypeExtensions" FullName="Microsoft.Build.Experimental.BuildCheck.ItemTypeExtensions">
  <TypeSignature Language="C#" Value="public static class ItemTypeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit ItemTypeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Experimental.BuildCheck.ItemTypeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module ItemTypeExtensions" />
  <TypeSignature Language="F#" Value="type ItemTypeExtensions = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemTypeExtensions abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Extension methods for <see cref="T:Microsoft.Build.Construction.ProjectItemElement" />.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetItemsOfType">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectItemElement&gt; GetItemsOfType (this System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectItemElement&gt; items, string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectItemElement&gt; GetItemsOfType(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectItemElement&gt; items, string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.BuildCheck.ItemTypeExtensions.GetItemsOfType(System.Collections.Generic.IEnumerable{Microsoft.Build.Construction.ProjectItemElement},System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetItemsOfType (items As IEnumerable(Of ProjectItemElement), itemType As String) As IEnumerable(Of ProjectItemElement)" />
      <MemberSignature Language="F#" Value="static member GetItemsOfType : seq&lt;Microsoft.Build.Construction.ProjectItemElement&gt; * string -&gt; seq&lt;Microsoft.Build.Construction.ProjectItemElement&gt;" Usage="Microsoft.Build.Experimental.BuildCheck.ItemTypeExtensions.GetItemsOfType (items, itemType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectItemElement ^&gt; ^ GetItemsOfType(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectItemElement ^&gt; ^ items, System::String ^ itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="msbuild-17-netcore">
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectItemElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectItemElement&gt;" RefType="this" />
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="items">To be added.</param>
        <param name="itemType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
