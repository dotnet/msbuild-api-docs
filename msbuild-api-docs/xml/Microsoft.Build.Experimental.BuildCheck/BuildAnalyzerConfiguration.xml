<Type Name="BuildAnalyzerConfiguration" FullName="Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration">
  <TypeSignature Language="C#" Value="public class BuildAnalyzerConfiguration" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BuildAnalyzerConfiguration extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration" />
  <TypeSignature Language="VB.NET" Value="Public Class BuildAnalyzerConfiguration" />
  <TypeSignature Language="F#" Value="type BuildAnalyzerConfiguration = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildAnalyzerConfiguration" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-17-netcore">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="msbuild-17-netcore">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Configuration for a build analyzer.
            Default values can be specified by the Analyzer in code.
            Users can overwrite the defaults by explicit settings in the .editorconfig file.
            Each rule can have its own configuration, which can differ per each project.
            The <see cref="P:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.EvaluationAnalysisScope" /> setting must be same for all rules in the same analyzer (but can differ between projects)
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BuildAnalyzerConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BuildAnalyzerConfiguration();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration Default" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As BuildAnalyzerConfiguration" />
      <MemberSignature Language="F#" Value="static member Default : Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration" Usage="Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.Default" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Build::Experimental::BuildCheck::BuildAnalyzerConfiguration ^ Default { Microsoft::Build::Experimental::BuildCheck::BuildAnalyzerConfiguration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationAnalysisScope">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Experimental.BuildCheck.EvaluationAnalysisScope? EvaluationAnalysisScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Build.Experimental.BuildCheck.EvaluationAnalysisScope&gt; EvaluationAnalysisScope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.EvaluationAnalysisScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationAnalysisScope As Nullable(Of EvaluationAnalysisScope)" />
      <MemberSignature Language="F#" Value="member this.EvaluationAnalysisScope : Nullable&lt;Microsoft.Build.Experimental.BuildCheck.EvaluationAnalysisScope&gt;" Usage="Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.EvaluationAnalysisScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::Build::Experimental::BuildCheck::EvaluationAnalysisScope&gt; EvaluationAnalysisScope { Nullable&lt;Microsoft::Build::Experimental::BuildCheck::EvaluationAnalysisScope&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Build.Experimental.BuildCheck.EvaluationAnalysisScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
             This applies only to specific events, that can distinguish whether they are directly inferred from
              the current project, or from some import. If supported it can help tuning the level of detail or noise from analysis.
            
             If not supported by the data source - then the setting is ignored
             </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool? IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnabled As Nullable(Of Boolean)" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : Nullable&lt;bool&gt;" Usage="Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.IsEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsEnabled { Nullable&lt;bool&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Whether the analyzer rule is enabled.
            If all rules within the analyzer are not enabled, it will not be run.
            If some rules are enabled and some are not, the analyzer will be run and reports will be post-filtered.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Null">
      <MemberSignature Language="C#" Value="public static Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration Null { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration Null" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.Null" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Null As BuildAnalyzerConfiguration" />
      <MemberSignature Language="F#" Value="static member Null : Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration" Usage="Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.Null" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::Build::Experimental::BuildCheck::BuildAnalyzerConfiguration ^ Null { Microsoft::Build::Experimental::BuildCheck::BuildAnalyzerConfiguration ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Severity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity? Severity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity&gt; Severity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.Severity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Severity As Nullable(Of BuildAnalyzerResultSeverity)" />
      <MemberSignature Language="F#" Value="member this.Severity : Nullable&lt;Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity&gt;" Usage="Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerConfiguration.Severity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;Microsoft::Build::Experimental::BuildCheck::BuildAnalyzerResultSeverity&gt; Severity { Nullable&lt;Microsoft::Build::Experimental::BuildCheck::BuildAnalyzerResultSeverity&gt; get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;Microsoft.Build.Experimental.BuildCheck.BuildAnalyzerResultSeverity&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            The severity of the result for the rule.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
