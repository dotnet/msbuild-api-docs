<Type Name="CheckConfigurationEffective" FullName="Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective">
  <TypeSignature Language="C#" Value="public sealed class CheckConfigurationEffective" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CheckConfigurationEffective extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CheckConfigurationEffective" />
  <TypeSignature Language="F#" Value="type CheckConfigurationEffective = class" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckConfigurationEffective sealed" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="msbuild-17-netcore">
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
            Counterpart type for BuildCheckConfiguration - with all properties non-nullable
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckConfigurationEffective (string ruleId, Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope evaluationCheckScope, Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity severity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string ruleId, valuetype Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope evaluationCheckScope, valuetype Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity severity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.#ctor(System.String,Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope,Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ruleId As String, evaluationCheckScope As EvaluationCheckScope, severity As CheckResultSeverity)" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective : string * Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope * Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity -&gt; Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective" Usage="new Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective (ruleId, evaluationCheckScope, severity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckConfigurationEffective(System::String ^ ruleId, Microsoft::Build::Experimental::BuildCheck::EvaluationCheckScope evaluationCheckScope, Microsoft::Build::Experimental::BuildCheck::CheckResultSeverity severity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ruleId" Type="System.String" />
        <Parameter Name="evaluationCheckScope" Type="Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope" />
        <Parameter Name="severity" Type="Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity" />
      </Parameters>
      <Docs>
        <param name="ruleId">To be added.</param>
        <param name="evaluationCheckScope">To be added.</param>
        <param name="severity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCheckScope">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope EvaluationCheckScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope EvaluationCheckScope" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.EvaluationCheckScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCheckScope As EvaluationCheckScope" />
      <MemberSignature Language="F#" Value="member this.EvaluationCheckScope : Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope" Usage="Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.EvaluationCheckScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Experimental::BuildCheck::EvaluationCheckScope EvaluationCheckScope { Microsoft::Build::Experimental::BuildCheck::EvaluationCheckScope get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Experimental.BuildCheck.EvaluationCheckScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.IsEnabled" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSameConfigurationAs">
      <MemberSignature Language="C#" Value="public bool IsSameConfigurationAs (Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsSameConfigurationAs(class Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.IsSameConfigurationAs(Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsSameConfigurationAs (other As CheckConfigurationEffective) As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSameConfigurationAs : Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective -&gt; bool" Usage="checkConfigurationEffective.IsSameConfigurationAs other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsSameConfigurationAs(Microsoft::Build::Experimental::BuildCheck::Infrastructure::CheckConfigurationEffective ^ other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleId">
      <MemberSignature Language="C#" Value="public string RuleId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuleId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.RuleId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleId As String" />
      <MemberSignature Language="F#" Value="member this.RuleId : string" Usage="Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.RuleId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RuleId { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Severity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity Severity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity Severity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.Severity" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Severity As CheckResultSeverity" />
      <MemberSignature Language="F#" Value="member this.Severity : Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity" Usage="Microsoft.Build.Experimental.BuildCheck.Infrastructure.CheckConfigurationEffective.Severity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Experimental::BuildCheck::CheckResultSeverity Severity { Microsoft::Build::Experimental::BuildCheck::CheckResultSeverity get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Experimental.BuildCheck.CheckResultSeverity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
